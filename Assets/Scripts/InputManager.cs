using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class InputManager : MonoBehaviour
{
    private PlayerInput playerInput;
    private PlayerInput.OnFootActions onFoot;  // This is the action map generated by the new Input System

    private PlayerMotor motor;
    private PlayerLook look;

    // Property to expose the OnFoot actions for access in other scripts
    public PlayerInput.OnFootActions OnFoot => onFoot;

    void Awake()
    {
        // Initialize PlayerInput and action map
        playerInput = new PlayerInput();
        onFoot = playerInput.OnFoot;

        // Get the PlayerMotor and PlayerLook components
        motor = GetComponent<PlayerMotor>();
        look = GetComponent<PlayerLook>();

        // Subscribe to the jump, crouch, and sprint actions
        onFoot.Jump.performed += ctx => motor.Jump();
        onFoot.Crouch.performed += ctx => motor.Crouch();
        onFoot.Sprint.performed += ctx => motor.Sprint();
    }

    void FixedUpdate()
    {
        // Move the player based on input
        motor.ProcessMove(onFoot.Movement.ReadValue<Vector2>());
    }

    void LateUpdate()
    {
        // Handle looking around based on input
        look.ProcessLook(onFoot.Look.ReadValue<Vector2>());
    }

    private void OnEnable()
    {
        // Enable the input actions
        onFoot.Enable();
    }

    private void OnDisable()
    {
        // Disable the input actions
        onFoot.Disable();
    }
}
